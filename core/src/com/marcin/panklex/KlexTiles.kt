package com.marcin.panklex

import com.badlogic.gdx.assets.AssetManager
import com.badlogic.gdx.graphics.Texture
import com.badlogic.gdx.graphics.g2d.TextureRegion
import com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile

class KlexTiles(val assetManager: AssetManager)
{
    // entities

    val playerTile = StaticTiledMapTile(TextureRegion(assetManager.get<Texture>("tiles/entities/player.png")))

    // special

    val testTileset = TextureRegion(assetManager.get<Texture>("tiles/special.png")).split(32, 32)
    val blueTile = StaticTiledMapTile(testTileset[0][0])
    val greenTile = StaticTiledMapTile(testTileset[0][1])
    val redTile = StaticTiledMapTile(testTileset[0][2])
    val yellowTile = StaticTiledMapTile(testTileset[0][3])
    val purpleTile = StaticTiledMapTile(testTileset[1][0])
    val selectTile = StaticTiledMapTile(testTileset[1][1])
    val objectTile = StaticTiledMapTile(testTileset[1][2])
    val emptyTile = StaticTiledMapTile(testTileset[1][3])

    val coverTileset = TextureRegion(assetManager.get<Texture>("tiles/cover.png")).split(32, 32)
    val cover_half = StaticTiledMapTile(coverTileset[0][0])
    val cover_all = StaticTiledMapTile(coverTileset[0][1])

    // example

    val exampleHoleTileset = TextureRegion(assetManager.get<Texture>("tiles/example/hole.png")).split(32, 32)
    val exampleHole_l_m_r = StaticTiledMapTile(exampleHoleTileset[0][0])
    val exampleHole_l_m = StaticTiledMapTile(exampleHoleTileset[0][1])
    val exampleHole_m = StaticTiledMapTile(exampleHoleTileset[0][2])
    val exampleHole_m_r = StaticTiledMapTile(TextureRegion(exampleHoleTileset[0][1]).apply { flip(true, false) })
    val exampleHole_none = StaticTiledMapTile(exampleHoleTileset[0][3])

    val exampleBaseTileset = TextureRegion(assetManager.get<Texture>("tiles/example/base.png")).split(32, 32)
    val exampleBase_ul = StaticTiledMapTile(exampleBaseTileset[0][0])
    val exampleBase_ur = StaticTiledMapTile(TextureRegion(exampleBaseTileset[0][0]).apply { flip(true, false) })
    val exampleBase_dr = StaticTiledMapTile(TextureRegion(exampleBaseTileset[0][0]).apply { flip(true, true) })
    val exampleBase_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[0][0]).apply { flip(false, true) })
    val exampleBase_ul_ur = StaticTiledMapTile(exampleBaseTileset[0][1])
    val exampleBase_ur_dr = StaticTiledMapTile(exampleBaseTileset[0][2])
    val exampleBase_dr_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[0][1]).apply { flip(false, true) })
    val exampleBase_ul_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[0][2]).apply { flip(true, false) })
    val exampleBase_ul_dr = StaticTiledMapTile(exampleBaseTileset[0][3])
    val exampleBase_ur_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[0][3]).apply { flip(true, false) })
    val exampleBase_ul_ur_dr = StaticTiledMapTile(exampleBaseTileset[0][4])
    val exampleBase_ur_dr_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[0][4]).apply { flip(false, true) })
    val exampleBase_ul_dr_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[0][4]).apply { flip(true, true) })
    val exampleBase_ul_ur_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[0][4]).apply { flip(true, false) })
    val exampleBase_ul_ur_dr_dl = StaticTiledMapTile(exampleBaseTileset[1][4])
    val exampleBase_ul_u_ur_r_dr = StaticTiledMapTile(exampleBaseTileset[1][0])
    val exampleBase_ur_r_dr_d_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[1][0]).apply { flip(false, true) })
    val exampleBase_ul_dr_d_dl_l = StaticTiledMapTile(TextureRegion(exampleBaseTileset[1][0]).apply { flip(true, true) })
    val exampleBase_ul_u_ur_dl_l = StaticTiledMapTile(TextureRegion(exampleBaseTileset[1][0]).apply { flip(true, false) })
    val exampleBase_ul_u_ur_r_dr_dl = StaticTiledMapTile(exampleBaseTileset[1][1])
    val exampleBase_ul_ur_r_dr_d_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[1][1]).apply { flip(false, true) })
    val exampleBase_ul_ur_dr_d_dl_l = StaticTiledMapTile(TextureRegion(exampleBaseTileset[1][1]).apply { flip(true, true) })
    val exampleBase_ul_u_ur_dr_dl_l = StaticTiledMapTile(TextureRegion(exampleBaseTileset[1][1]).apply { flip(true, false) })
    val exampleBase_ul_u_ur_r_dr_d_dl = StaticTiledMapTile(exampleBaseTileset[1][2])
    val exampleBase_ul_ur_r_dr_d_dl_l = StaticTiledMapTile(exampleBaseTileset[1][3])
    val exampleBase_ul_u_ur_dr_d_dl_l = StaticTiledMapTile(TextureRegion(exampleBaseTileset[1][2]).apply { flip(true, false) })
    val exampleBase_ul_u_ur_r_dr_dl_l = StaticTiledMapTile(TextureRegion(exampleBaseTileset[1][3]).apply { flip(false, true) })
    val exampleBase_ul_u_ur = StaticTiledMapTile(exampleBaseTileset[2][0])
    val exampleBase_ur_r_dr = StaticTiledMapTile(exampleBaseTileset[3][0])
    val exampleBase_dr_d_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[2][0]).apply { flip(false, true) })
    val exampleBase_ul_dl_l = StaticTiledMapTile(TextureRegion(exampleBaseTileset[3][0]).apply { flip(true, false) })
    val exampleBase_ul_u_ur_dl = StaticTiledMapTile(exampleBaseTileset[2][1])
    val exampleBase_ul_ur_r_dr = StaticTiledMapTile(exampleBaseTileset[3][1])
    val exampleBase_ur_dr_d_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[2][1]).apply { flip(true, true) })
    val exampleBase_ul_dr_dl_l = StaticTiledMapTile(TextureRegion(exampleBaseTileset[3][1]).apply { flip(true, true) })
    val exampleBase_ul_u_ur_dr = StaticTiledMapTile(TextureRegion(exampleBaseTileset[2][1]).apply { flip(true, false) })
    val exampleBase_ur_r_dr_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[3][1]).apply { flip(false, true) })
    val exampleBase_ul_dr_d_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[2][1]).apply { flip(false, true) })
    val exampleBase_ul_ur_dl_l = StaticTiledMapTile(TextureRegion(exampleBaseTileset[3][1]).apply { flip(true, false) })
    val exampleBase_ul_u_ur_dr_dl = StaticTiledMapTile(exampleBaseTileset[2][2])
    val exampleBase_ul_ur_r_dr_dl = StaticTiledMapTile(exampleBaseTileset[3][2])
    val exampleBase_ul_ur_dr_d_dl = StaticTiledMapTile(TextureRegion(exampleBaseTileset[2][2]).apply { flip(false, true) })
    val exampleBase_ul_ur_dr_dl_l = StaticTiledMapTile(TextureRegion(exampleBaseTileset[3][2]).apply { flip(true, false) })
    val exampleBase_ul_u_ur_dr_d_dl = StaticTiledMapTile(exampleBaseTileset[2][3])
    val exampleBase_ul_ur_r_dr_dl_l = StaticTiledMapTile(exampleBaseTileset[3][3])
    val exampleBase_none = StaticTiledMapTile(exampleBaseTileset[2][4])
    val exampleBase_ul_u_ur_r_dr_d_dl_l = StaticTiledMapTile(exampleBaseTileset[3][4])

    val exampleWallTileset = TextureRegion(assetManager.get<Texture>("tiles/example/wall.png")).split(32, 32)
    val exampleWall_l_m_r = StaticTiledMapTile(exampleWallTileset[0][0])
    val exampleWall_l_m = StaticTiledMapTile(exampleWallTileset[0][1])
    val exampleWall_m = StaticTiledMapTile(exampleWallTileset[0][2])
    val exampleWall_m_r = StaticTiledMapTile(TextureRegion(exampleWallTileset[0][1]).apply { flip(true, false) })

    // undamaged stone

    val undamStoneHoleTileset = TextureRegion(assetManager.get<Texture>("tiles/undamagedStone/hole.png")).split(32, 32)
    val undamStoneHole_l_m_r = StaticTiledMapTile(undamStoneHoleTileset[0][0])
    val undamStoneHole_l_m = StaticTiledMapTile(undamStoneHoleTileset[0][1])
    val undamStoneHole_m = StaticTiledMapTile(undamStoneHoleTileset[0][2])
    val undamStoneHole_m_r = StaticTiledMapTile(TextureRegion(undamStoneHoleTileset[0][1]).apply { flip(true, false) })
    val undamStoneHole_none = StaticTiledMapTile(undamStoneHoleTileset[0][3])

    val undamStoneBaseTileset = TextureRegion(assetManager.get<Texture>("tiles/undamagedStone/base.png")).split(32, 32)
    val undamStoneBase_ul = StaticTiledMapTile(undamStoneBaseTileset[0][0])
    val undamStoneBase_ur = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[0][0]).apply { flip(true, false) })
    val undamStoneBase_dr = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[0][0]).apply { flip(true, true) })
    val undamStoneBase_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[0][0]).apply { flip(false, true) })
    val undamStoneBase_ul_ur = StaticTiledMapTile(undamStoneBaseTileset[0][1])
    val undamStoneBase_ur_dr = StaticTiledMapTile(undamStoneBaseTileset[0][2])
    val undamStoneBase_dr_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[0][1]).apply { flip(false, true) })
    val undamStoneBase_ul_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[0][2]).apply { flip(true, false) })
    val undamStoneBase_ul_dr = StaticTiledMapTile(undamStoneBaseTileset[0][3])
    val undamStoneBase_ur_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[0][3]).apply { flip(true, false) })
    val undamStoneBase_ul_ur_dr = StaticTiledMapTile(undamStoneBaseTileset[0][4])
    val undamStoneBase_ur_dr_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[0][4]).apply { flip(false, true) })
    val undamStoneBase_ul_dr_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[0][4]).apply { flip(true, true) })
    val undamStoneBase_ul_ur_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[0][4]).apply { flip(true, false) })
    val undamStoneBase_ul_ur_dr_dl = StaticTiledMapTile(undamStoneBaseTileset[1][4])
    val undamStoneBase_ul_u_ur_r_dr = StaticTiledMapTile(undamStoneBaseTileset[1][0])
    val undamStoneBase_ur_r_dr_d_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[1][0]).apply { flip(false, true) })
    val undamStoneBase_ul_dr_d_dl_l = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[1][0]).apply { flip(true, true) })
    val undamStoneBase_ul_u_ur_dl_l = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[1][0]).apply { flip(true, false) })
    val undamStoneBase_ul_u_ur_r_dr_dl = StaticTiledMapTile(undamStoneBaseTileset[1][1])
    val undamStoneBase_ul_ur_r_dr_d_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[1][1]).apply { flip(false, true) })
    val undamStoneBase_ul_ur_dr_d_dl_l = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[1][1]).apply { flip(true, true) })
    val undamStoneBase_ul_u_ur_dr_dl_l = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[1][1]).apply { flip(true, false) })
    val undamStoneBase_ul_u_ur_r_dr_d_dl = StaticTiledMapTile(undamStoneBaseTileset[1][2])
    val undamStoneBase_ul_ur_r_dr_d_dl_l = StaticTiledMapTile(undamStoneBaseTileset[1][3])
    val undamStoneBase_ul_u_ur_dr_d_dl_l = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[1][2]).apply { flip(true, false) })
    val undamStoneBase_ul_u_ur_r_dr_dl_l = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[1][3]).apply { flip(false, true) })
    val undamStoneBase_ul_u_ur = StaticTiledMapTile(undamStoneBaseTileset[2][0])
    val undamStoneBase_ur_r_dr = StaticTiledMapTile(undamStoneBaseTileset[3][0])
    val undamStoneBase_dr_d_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[2][0]).apply { flip(false, true) })
    val undamStoneBase_ul_dl_l = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[3][0]).apply { flip(true, false) })
    val undamStoneBase_ul_u_ur_dl = StaticTiledMapTile(undamStoneBaseTileset[2][1])
    val undamStoneBase_ul_ur_r_dr = StaticTiledMapTile(undamStoneBaseTileset[3][1])
    val undamStoneBase_ur_dr_d_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[2][1]).apply { flip(true, true) })
    val undamStoneBase_ul_dr_dl_l = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[3][1]).apply { flip(true, true) })
    val undamStoneBase_ul_u_ur_dr = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[2][1]).apply { flip(true, false) })
    val undamStoneBase_ur_r_dr_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[3][1]).apply { flip(false, true) })
    val undamStoneBase_ul_dr_d_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[2][1]).apply { flip(false, true) })
    val undamStoneBase_ul_ur_dl_l = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[3][1]).apply { flip(true, false) })
    val undamStoneBase_ul_u_ur_dr_dl = StaticTiledMapTile(undamStoneBaseTileset[2][2])
    val undamStoneBase_ul_ur_r_dr_dl = StaticTiledMapTile(undamStoneBaseTileset[3][2])
    val undamStoneBase_ul_ur_dr_d_dl = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[2][2]).apply { flip(false, true) })
    val undamStoneBase_ul_ur_dr_dl_l = StaticTiledMapTile(TextureRegion(undamStoneBaseTileset[3][2]).apply { flip(true, false) })
    val undamStoneBase_ul_u_ur_dr_d_dl = StaticTiledMapTile(undamStoneBaseTileset[2][3])
    val undamStoneBase_ul_ur_r_dr_dl_l = StaticTiledMapTile(undamStoneBaseTileset[3][3])
    val undamStoneBase_none = StaticTiledMapTile(undamStoneBaseTileset[2][4])
    val undamStoneBase_ul_u_ur_r_dr_d_dl_l = StaticTiledMapTile(undamStoneBaseTileset[3][4])

    val undamStoneWallTileset = TextureRegion(assetManager.get<Texture>("tiles/undamagedStone/wall.png")).split(32, 32)
    val undamStoneWall_l_m_r = StaticTiledMapTile(undamStoneWallTileset[0][0])
    val undamStoneWall_l_m = StaticTiledMapTile(undamStoneWallTileset[0][1])
    val undamStoneWall_m = StaticTiledMapTile(undamStoneWallTileset[0][2])
    val undamStoneWall_m_r = StaticTiledMapTile(TextureRegion(undamStoneWallTileset[0][1]).apply { flip(true, false) })

    // damaged stone

    val damStoneHoleTileset = TextureRegion(assetManager.get<Texture>("tiles/damagedStone/hole.png")).split(32, 32)
    val damStoneHole_l_m_r = StaticTiledMapTile(damStoneHoleTileset[0][0])
    val damStoneHole_l_m = StaticTiledMapTile(damStoneHoleTileset[0][1])
    val damStoneHole_m = StaticTiledMapTile(damStoneHoleTileset[0][2])
    val damStoneHole_m_r = StaticTiledMapTile(TextureRegion(damStoneHoleTileset[0][1]).apply { flip(true, false) })
    val damStoneHole_none = StaticTiledMapTile(damStoneHoleTileset[0][3])

    val damStoneBaseTileset = TextureRegion(assetManager.get<Texture>("tiles/damagedStone/base.png")).split(32, 32)
    val damStoneBase_ul = StaticTiledMapTile(damStoneBaseTileset[0][0])
    val damStoneBase_ur = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[0][0]).apply { flip(true, false) })
    val damStoneBase_dr = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[0][0]).apply { flip(true, true) })
    val damStoneBase_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[0][0]).apply { flip(false, true) })
    val damStoneBase_ul_ur = StaticTiledMapTile(damStoneBaseTileset[0][1])
    val damStoneBase_ur_dr = StaticTiledMapTile(damStoneBaseTileset[0][2])
    val damStoneBase_dr_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[0][1]).apply { flip(false, true) })
    val damStoneBase_ul_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[0][2]).apply { flip(true, false) })
    val damStoneBase_ul_dr = StaticTiledMapTile(damStoneBaseTileset[0][3])
    val damStoneBase_ur_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[0][3]).apply { flip(true, false) })
    val damStoneBase_ul_ur_dr = StaticTiledMapTile(damStoneBaseTileset[0][4])
    val damStoneBase_ur_dr_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[0][4]).apply { flip(false, true) })
    val damStoneBase_ul_dr_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[0][4]).apply { flip(true, true) })
    val damStoneBase_ul_ur_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[0][4]).apply { flip(true, false) })
    val damStoneBase_ul_ur_dr_dl = StaticTiledMapTile(damStoneBaseTileset[1][4])
    val damStoneBase_ul_u_ur_r_dr = StaticTiledMapTile(damStoneBaseTileset[1][0])
    val damStoneBase_ur_r_dr_d_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[1][0]).apply { flip(false, true) })
    val damStoneBase_ul_dr_d_dl_l = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[1][0]).apply { flip(true, true) })
    val damStoneBase_ul_u_ur_dl_l = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[1][0]).apply { flip(true, false) })
    val damStoneBase_ul_u_ur_r_dr_dl = StaticTiledMapTile(damStoneBaseTileset[1][1])
    val damStoneBase_ul_ur_r_dr_d_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[1][1]).apply { flip(false, true) })
    val damStoneBase_ul_ur_dr_d_dl_l = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[1][1]).apply { flip(true, true) })
    val damStoneBase_ul_u_ur_dr_dl_l = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[1][1]).apply { flip(true, false) })
    val damStoneBase_ul_u_ur_r_dr_d_dl = StaticTiledMapTile(damStoneBaseTileset[1][2])
    val damStoneBase_ul_ur_r_dr_d_dl_l = StaticTiledMapTile(damStoneBaseTileset[1][3])
    val damStoneBase_ul_u_ur_dr_d_dl_l = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[1][2]).apply { flip(true, false) })
    val damStoneBase_ul_u_ur_r_dr_dl_l = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[1][3]).apply { flip(false, true) })
    val damStoneBase_ul_u_ur = StaticTiledMapTile(damStoneBaseTileset[2][0])
    val damStoneBase_ur_r_dr = StaticTiledMapTile(damStoneBaseTileset[3][0])
    val damStoneBase_dr_d_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[2][0]).apply { flip(false, true) })
    val damStoneBase_ul_dl_l = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[3][0]).apply { flip(true, false) })
    val damStoneBase_ul_u_ur_dl = StaticTiledMapTile(damStoneBaseTileset[2][1])
    val damStoneBase_ul_ur_r_dr = StaticTiledMapTile(damStoneBaseTileset[3][1])
    val damStoneBase_ur_dr_d_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[2][1]).apply { flip(true, true) })
    val damStoneBase_ul_dr_dl_l = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[3][1]).apply { flip(true, true) })
    val damStoneBase_ul_u_ur_dr = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[2][1]).apply { flip(true, false) })
    val damStoneBase_ur_r_dr_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[3][1]).apply { flip(false, true) })
    val damStoneBase_ul_dr_d_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[2][1]).apply { flip(false, true) })
    val damStoneBase_ul_ur_dl_l = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[3][1]).apply { flip(true, false) })
    val damStoneBase_ul_u_ur_dr_dl = StaticTiledMapTile(damStoneBaseTileset[2][2])
    val damStoneBase_ul_ur_r_dr_dl = StaticTiledMapTile(damStoneBaseTileset[3][2])
    val damStoneBase_ul_ur_dr_d_dl = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[2][2]).apply { flip(false, true) })
    val damStoneBase_ul_ur_dr_dl_l = StaticTiledMapTile(TextureRegion(damStoneBaseTileset[3][2]).apply { flip(true, false) })
    val damStoneBase_ul_u_ur_dr_d_dl = StaticTiledMapTile(damStoneBaseTileset[2][3])
    val damStoneBase_ul_ur_r_dr_dl_l = StaticTiledMapTile(damStoneBaseTileset[3][3])
    val damStoneBase_none = StaticTiledMapTile(damStoneBaseTileset[2][4])
    val damStoneBase_ul_u_ur_r_dr_d_dl_l = StaticTiledMapTile(damStoneBaseTileset[3][4])

    val damStoneWallTileset = TextureRegion(assetManager.get<Texture>("tiles/damagedStone/wall.png")).split(32, 32)
    val damStoneWall_l_m_r = StaticTiledMapTile(damStoneWallTileset[0][0])
    val damStoneWall_l_m = StaticTiledMapTile(damStoneWallTileset[0][1])
    val damStoneWall_m = StaticTiledMapTile(damStoneWallTileset[0][2])
    val damStoneWall_m_r = StaticTiledMapTile(TextureRegion(damStoneWallTileset[0][1]).apply { flip(true, false) })

    // brick

    val brickHoleTileset = TextureRegion(assetManager.get<Texture>("tiles/brick/hole.png")).split(32, 32)
    val brickHole_l_m_r = StaticTiledMapTile(brickHoleTileset[0][0])
    val brickHole_l_m = StaticTiledMapTile(brickHoleTileset[0][1])
    val brickHole_m = StaticTiledMapTile(brickHoleTileset[0][2])
    val brickHole_m_r = StaticTiledMapTile(TextureRegion(brickHoleTileset[0][1]).apply { flip(true, false) })
    val brickHole_none = StaticTiledMapTile(brickHoleTileset[0][3])

    val brickBaseTileset = TextureRegion(assetManager.get<Texture>("tiles/brick/base.png")).split(32, 32)
    val brickBase_ul = StaticTiledMapTile(brickBaseTileset[0][0])
    val brickBase_ur = StaticTiledMapTile(TextureRegion(brickBaseTileset[0][0]).apply { flip(true, false) })
    val brickBase_dr = StaticTiledMapTile(TextureRegion(brickBaseTileset[0][0]).apply { flip(true, true) })
    val brickBase_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[0][0]).apply { flip(false, true) })
    val brickBase_ul_ur = StaticTiledMapTile(brickBaseTileset[0][1])
    val brickBase_ur_dr = StaticTiledMapTile(brickBaseTileset[0][2])
    val brickBase_dr_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[0][1]).apply { flip(false, true) })
    val brickBase_ul_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[0][2]).apply { flip(true, false) })
    val brickBase_ul_dr = StaticTiledMapTile(brickBaseTileset[0][3])
    val brickBase_ur_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[0][3]).apply { flip(true, false) })
    val brickBase_ul_ur_dr = StaticTiledMapTile(brickBaseTileset[0][4])
    val brickBase_ur_dr_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[0][4]).apply { flip(false, true) })
    val brickBase_ul_dr_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[0][4]).apply { flip(true, true) })
    val brickBase_ul_ur_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[0][4]).apply { flip(true, false) })
    val brickBase_ul_ur_dr_dl = StaticTiledMapTile(brickBaseTileset[1][4])
    val brickBase_ul_u_ur_r_dr = StaticTiledMapTile(brickBaseTileset[1][0])
    val brickBase_ur_r_dr_d_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[1][0]).apply { flip(false, true) })
    val brickBase_ul_dr_d_dl_l = StaticTiledMapTile(TextureRegion(brickBaseTileset[1][0]).apply { flip(true, true) })
    val brickBase_ul_u_ur_dl_l = StaticTiledMapTile(TextureRegion(brickBaseTileset[1][0]).apply { flip(true, false) })
    val brickBase_ul_u_ur_r_dr_dl = StaticTiledMapTile(brickBaseTileset[1][1])
    val brickBase_ul_ur_r_dr_d_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[1][1]).apply { flip(false, true) })
    val brickBase_ul_ur_dr_d_dl_l = StaticTiledMapTile(TextureRegion(brickBaseTileset[1][1]).apply { flip(true, true) })
    val brickBase_ul_u_ur_dr_dl_l = StaticTiledMapTile(TextureRegion(brickBaseTileset[1][1]).apply { flip(true, false) })
    val brickBase_ul_u_ur_r_dr_d_dl = StaticTiledMapTile(brickBaseTileset[1][2])
    val brickBase_ul_ur_r_dr_d_dl_l = StaticTiledMapTile(brickBaseTileset[1][3])
    val brickBase_ul_u_ur_dr_d_dl_l = StaticTiledMapTile(TextureRegion(brickBaseTileset[1][2]).apply { flip(true, false) })
    val brickBase_ul_u_ur_r_dr_dl_l = StaticTiledMapTile(TextureRegion(brickBaseTileset[1][3]).apply { flip(false, true) })
    val brickBase_ul_u_ur = StaticTiledMapTile(brickBaseTileset[2][0])
    val brickBase_ur_r_dr = StaticTiledMapTile(brickBaseTileset[3][0])
    val brickBase_dr_d_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[2][0]).apply { flip(false, true) })
    val brickBase_ul_dl_l = StaticTiledMapTile(TextureRegion(brickBaseTileset[3][0]).apply { flip(true, false) })
    val brickBase_ul_u_ur_dl = StaticTiledMapTile(brickBaseTileset[2][1])
    val brickBase_ul_ur_r_dr = StaticTiledMapTile(brickBaseTileset[3][1])
    val brickBase_ur_dr_d_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[2][1]).apply { flip(true, true) })
    val brickBase_ul_dr_dl_l = StaticTiledMapTile(TextureRegion(brickBaseTileset[3][1]).apply { flip(true, true) })
    val brickBase_ul_u_ur_dr = StaticTiledMapTile(TextureRegion(brickBaseTileset[2][1]).apply { flip(true, false) })
    val brickBase_ur_r_dr_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[3][1]).apply { flip(false, true) })
    val brickBase_ul_dr_d_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[2][1]).apply { flip(false, true) })
    val brickBase_ul_ur_dl_l = StaticTiledMapTile(TextureRegion(brickBaseTileset[3][1]).apply { flip(true, false) })
    val brickBase_ul_u_ur_dr_dl = StaticTiledMapTile(brickBaseTileset[2][2])
    val brickBase_ul_ur_r_dr_dl = StaticTiledMapTile(brickBaseTileset[3][2])
    val brickBase_ul_ur_dr_d_dl = StaticTiledMapTile(TextureRegion(brickBaseTileset[2][2]).apply { flip(false, true) })
    val brickBase_ul_ur_dr_dl_l = StaticTiledMapTile(TextureRegion(brickBaseTileset[3][2]).apply { flip(true, false) })
    val brickBase_ul_u_ur_dr_d_dl = StaticTiledMapTile(brickBaseTileset[2][3])
    val brickBase_ul_ur_r_dr_dl_l = StaticTiledMapTile(brickBaseTileset[3][3])
    val brickBase_none = StaticTiledMapTile(brickBaseTileset[2][4])
    val brickBase_ul_u_ur_r_dr_d_dl_l = StaticTiledMapTile(brickBaseTileset[3][4])

    val brickWallTileset = TextureRegion(assetManager.get<Texture>("tiles/brick/wall.png")).split(32, 32)
    val brickWall_l_m_r = StaticTiledMapTile(brickWallTileset[0][0])
    val brickWall_l_m = StaticTiledMapTile(brickWallTileset[0][1])
    val brickWall_m = StaticTiledMapTile(brickWallTileset[0][2])
    val brickWall_m_r = StaticTiledMapTile(TextureRegion(brickWallTileset[0][1]).apply { flip(true, false) })

    // metal

    val metalHoleTileset = TextureRegion(assetManager.get<Texture>("tiles/metal/hole.png")).split(32, 32)
    val metalHole_l_m_r = StaticTiledMapTile(metalHoleTileset[0][0])
    val metalHole_l_m = StaticTiledMapTile(metalHoleTileset[0][1])
    val metalHole_m = StaticTiledMapTile(metalHoleTileset[0][2])
    val metalHole_m_r = StaticTiledMapTile(TextureRegion(metalHoleTileset[0][1]).apply { flip(true, false) })
    val metalHole_none = StaticTiledMapTile(metalHoleTileset[0][3])

    val metalBaseTileset = TextureRegion(assetManager.get<Texture>("tiles/metal/base.png")).split(32, 32)
    val metalBase_ul = StaticTiledMapTile(metalBaseTileset[0][0])
    val metalBase_ur = StaticTiledMapTile(TextureRegion(metalBaseTileset[0][0]).apply { flip(true, false) })
    val metalBase_dr = StaticTiledMapTile(TextureRegion(metalBaseTileset[0][0]).apply { flip(true, true) })
    val metalBase_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[0][0]).apply { flip(false, true) })
    val metalBase_ul_ur = StaticTiledMapTile(metalBaseTileset[0][1])
    val metalBase_ur_dr = StaticTiledMapTile(metalBaseTileset[0][2])
    val metalBase_dr_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[0][1]).apply { flip(false, true) })
    val metalBase_ul_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[0][2]).apply { flip(true, false) })
    val metalBase_ul_dr = StaticTiledMapTile(metalBaseTileset[0][3])
    val metalBase_ur_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[0][3]).apply { flip(true, false) })
    val metalBase_ul_ur_dr = StaticTiledMapTile(metalBaseTileset[0][4])
    val metalBase_ur_dr_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[0][4]).apply { flip(false, true) })
    val metalBase_ul_dr_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[0][4]).apply { flip(true, true) })
    val metalBase_ul_ur_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[0][4]).apply { flip(true, false) })
    val metalBase_ul_ur_dr_dl = StaticTiledMapTile(metalBaseTileset[1][4])
    val metalBase_ul_u_ur_r_dr = StaticTiledMapTile(metalBaseTileset[1][0])
    val metalBase_ur_r_dr_d_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[1][0]).apply { flip(false, true) })
    val metalBase_ul_dr_d_dl_l = StaticTiledMapTile(TextureRegion(metalBaseTileset[1][0]).apply { flip(true, true) })
    val metalBase_ul_u_ur_dl_l = StaticTiledMapTile(TextureRegion(metalBaseTileset[1][0]).apply { flip(true, false) })
    val metalBase_ul_u_ur_r_dr_dl = StaticTiledMapTile(metalBaseTileset[1][1])
    val metalBase_ul_ur_r_dr_d_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[1][1]).apply { flip(false, true) })
    val metalBase_ul_ur_dr_d_dl_l = StaticTiledMapTile(TextureRegion(metalBaseTileset[1][1]).apply { flip(true, true) })
    val metalBase_ul_u_ur_dr_dl_l = StaticTiledMapTile(TextureRegion(metalBaseTileset[1][1]).apply { flip(true, false) })
    val metalBase_ul_u_ur_r_dr_d_dl = StaticTiledMapTile(metalBaseTileset[1][2])
    val metalBase_ul_ur_r_dr_d_dl_l = StaticTiledMapTile(metalBaseTileset[1][3])
    val metalBase_ul_u_ur_dr_d_dl_l = StaticTiledMapTile(TextureRegion(metalBaseTileset[1][2]).apply { flip(true, false) })
    val metalBase_ul_u_ur_r_dr_dl_l = StaticTiledMapTile(TextureRegion(metalBaseTileset[1][3]).apply { flip(false, true) })
    val metalBase_ul_u_ur = StaticTiledMapTile(metalBaseTileset[2][0])
    val metalBase_ur_r_dr = StaticTiledMapTile(metalBaseTileset[3][0])
    val metalBase_dr_d_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[2][0]).apply { flip(false, true) })
    val metalBase_ul_dl_l = StaticTiledMapTile(TextureRegion(metalBaseTileset[3][0]).apply { flip(true, false) })
    val metalBase_ul_u_ur_dl = StaticTiledMapTile(metalBaseTileset[2][1])
    val metalBase_ul_ur_r_dr = StaticTiledMapTile(metalBaseTileset[3][1])
    val metalBase_ur_dr_d_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[2][1]).apply { flip(true, true) })
    val metalBase_ul_dr_dl_l = StaticTiledMapTile(TextureRegion(metalBaseTileset[3][1]).apply { flip(true, true) })
    val metalBase_ul_u_ur_dr = StaticTiledMapTile(TextureRegion(metalBaseTileset[2][1]).apply { flip(true, false) })
    val metalBase_ur_r_dr_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[3][1]).apply { flip(false, true) })
    val metalBase_ul_dr_d_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[2][1]).apply { flip(false, true) })
    val metalBase_ul_ur_dl_l = StaticTiledMapTile(TextureRegion(metalBaseTileset[3][1]).apply { flip(true, false) })
    val metalBase_ul_u_ur_dr_dl = StaticTiledMapTile(metalBaseTileset[2][2])
    val metalBase_ul_ur_r_dr_dl = StaticTiledMapTile(metalBaseTileset[3][2])
    val metalBase_ul_ur_dr_d_dl = StaticTiledMapTile(TextureRegion(metalBaseTileset[2][2]).apply { flip(false, true) })
    val metalBase_ul_ur_dr_dl_l = StaticTiledMapTile(TextureRegion(metalBaseTileset[3][2]).apply { flip(true, false) })
    val metalBase_ul_u_ur_dr_d_dl = StaticTiledMapTile(metalBaseTileset[2][3])
    val metalBase_ul_ur_r_dr_dl_l = StaticTiledMapTile(metalBaseTileset[3][3])
    val metalBase_none = StaticTiledMapTile(metalBaseTileset[2][4])
    val metalBase_ul_u_ur_r_dr_d_dl_l = StaticTiledMapTile(metalBaseTileset[3][4])

    val metalWallTileset = TextureRegion(assetManager.get<Texture>("tiles/metal/wall.png")).split(32, 32)
    val metalWall_l_m_r = StaticTiledMapTile(metalWallTileset[0][0])
    val metalWall_l_m = StaticTiledMapTile(metalWallTileset[0][1])
    val metalWall_m = StaticTiledMapTile(metalWallTileset[0][2])
    val metalWall_m_r = StaticTiledMapTile(TextureRegion(metalWallTileset[0][1]).apply { flip(true, false) })
}